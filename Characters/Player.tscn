[gd_scene load_steps=13 format=2]

[ext_resource path="res://assets/ships/ship_1.png" type="Texture" id=1]
[ext_resource path="res://assets/ships/ship_2.png" type="Texture" id=2]
[ext_resource path="res://assets/ships/ship_2_1.png" type="Texture" id=3]
[ext_resource path="res://assets/ships/ship_2_2.png" type="Texture" id=4]

[sub_resource type="GDScript" id=1]
script/source = "extends Area2D


enum BulletType{Diamond, Drop, Oval, U, V}

const SPEED = 400 # speed of the ship
const BULLETS_PER_SECOND = 5 # bullets fired per second
const DAMAGE_PER_LEVEL = 50 # damage increase after levelup
const EXPERIENCE_PER_LEVEL = 100 # xp needed for level up
const LOSS_AFTER_ENEMY_HIT = 34 # damage that is taken after enemy is going out on the left
const BULLET_SPEED = 500 # bullet speed of the player
var ship_slave_offset_x = 120 # offset zum master wenn ich slave bin
var max_health = null

var level = 1
var experience = 0
var health = 100
var player_nr = null
var advertising = false

var docked = false
var is_master = false


onready var BULLET = preload(\"res://Characters/Bullet.tscn\")
var bullet_allowed = true
# Called when the node enters the scene tree for the first time.
func _ready():
	connect(\"body_entered\", self, \"_on_enemy_body_enter\")
	if(is_network_master()):
		rpc(\"set_position\",position)
	is_master = is_network_master()
	if is_network_master():
		$CanvasLayer/HealthBar.visible = false

func setup(_nr, _position, _health, _ship_pack):
	max_health = _health
	health = _health
	position = _position
	
	print(str(_ship_pack))
	
	if (_ship_pack == 1):
		if(_nr == 1):
			#server gets ship 1
			self.remove_child(get_node(\"Ship_2\"))
			self.remove_child(get_node(\"Ship_2_Shape\"))
			self.remove_child(get_node(\"Ship_2_1\"))
			self.remove_child(get_node(\"Ship_2_1_Shape\"))
			self.remove_child(get_node(\"Ship_2_2\"))
			self.remove_child(get_node(\"Ship_2_2_Shape\"))
			self.remove_child(get_node(\"Ship_2_Dock\"))
		else:
			self.remove_child(get_node(\"Ship_1\"))
			self.remove_child(get_node(\"Ship_1_Shape\"))
			self.remove_child(get_node(\"Ship_2_1\"))
			self.remove_child(get_node(\"Ship_2_1_Shape\"))
			self.remove_child(get_node(\"Ship_2_2\"))
			self.remove_child(get_node(\"Ship_2_2_Shape\"))
			self.remove_child(get_node(\"Ship_1_Dock\"))
	else:
		if(_nr == 1):
			#server gets ship 1
			self.remove_child(get_node(\"Ship_1\"))
			self.remove_child(get_node(\"Ship_1_Shape\"))
			self.remove_child(get_node(\"Ship_2\"))
			self.remove_child(get_node(\"Ship_2_Shape\"))
			self.remove_child(get_node(\"Ship_2_2\"))
			self.remove_child(get_node(\"Ship_2_2_Shape\"))
			self.remove_child(get_node(\"Ship_2_Dock\"))
		else:
			self.remove_child(get_node(\"Ship_1\"))
			self.remove_child(get_node(\"Ship_1_Shape\"))
			self.remove_child(get_node(\"Ship_2\"))
			self.remove_child(get_node(\"Ship_2_Shape\"))
			self.remove_child(get_node(\"Ship_2_1\"))
			self.remove_child(get_node(\"Ship_2_1_Shape\"))
			self.remove_child(get_node(\"Ship_1_Dock\"))
	player_nr = str(_nr)
	$CanvasLayer.offset = position
	
func done_setup():
	if player_nr == \"1\":
		print(\"Using Ship1\")
	else:
		print(\"Using Ship2\")
	if is_network_master():
		print(\"I am controlling: \",player_nr)
	else:
		print(\"I Am not controlling this: \", player_nr)
	print(\"Network master: \", get_network_master())
	
func _process(delta):
	if is_master:
		var is_slave = is_currently_dock_slave()
		if(!is_slave):
			process_movement(delta)
		if(is_slave or !docked):
			if Input.is_action_pressed(\"shoot_1\"):
				shoot()
		if !docked:
			if Input.is_action_just_pressed(\"dock_1\"):
				rpc(\"set_advertising_puppet\",!advertising)
				
				
func is_currently_dock_slave():
	return docked and !Config.is_server 
	
func is_currently_dock_master():
	return docked and Config.is_server
	
func shoot():
	if bullet_allowed:
		rpc(\"spawn_bullet\")
		bullet_allowed = false
		var _timer = Timer.new()
		self.add_child(_timer)
	
		_timer.connect(\"timeout\", self, \"_on_Timer_timeout\")
		_timer.set_wait_time(1/float(BULLETS_PER_SECOND))
		_timer.set_one_shot(true) 
		_timer.start()
		Sound.get_node(\"AudioStreamPlayerPew\").play()
	
puppetsync func spawn_bullet():
	var bullet =  BULLET.instance()
	bullet.setup(self,level * DAMAGE_PER_LEVEL,Vector2(position.x+20,position.y), BULLET_SPEED, BulletType.Diamond)
	$\"../\".add_child(bullet)
	Sound.get_node(\"AudioStreamPlayerPew\").play()
	
func process_movement(delta):
	var movement = Vector2(0,0)
	if Input.is_action_pressed(\"left_1\") :
		movement.x = -1 * SPEED
	if Input.is_action_pressed(\"right_1\") :
		movement.x = 1 * SPEED
	if Input.is_action_pressed(\"up_1\") :
		movement.y = -1 * SPEED
	if Input.is_action_pressed(\"down_1\"):
		movement.y = 1 * SPEED
	if((movement.x != 0 or movement.y != 0) and in_game(position + movement * delta)):
		addPosition(movement*delta)
		if docked and Config.is_server:
			get_parent().move_second(position+movement*delta)

func gainXP(amount):
	experience += amount
	if(experience>EXPERIENCE_PER_LEVEL):
		level+=1
		experience -= EXPERIENCE_PER_LEVEL

func _on_Timer_timeout():
	bullet_allowed = true
	
func in_game(position):
	return position.x < ProjectSettings.get_setting(\"display/window/size/width\") and position.y < ProjectSettings.get_setting(\"display/window/size/height\") and position.x > 0 and position.y > 0
	
func update_progress_bar(percent):
	if is_network_master():
		get_parent().update_health_bar(percent)
	else:
		$CanvasLayer/HealthBar.value = percent

func _on_enemy_body_enter(body):
	# print(\"Player collided with\",body.get_name())
	if \"Enemy\" in body.get_name():
		inflictDamage(LOSS_AFTER_ENEMY_HIT)
		body.kill_after_player_hit()
		
		
func inflictDamage(damage):
	if is_network_master():
		rpc(\"updateHealth\", health-damage)

puppetsync func updateHealth(newHealth):
	health = newHealth
	if(health < 0):
		kill_self()
	else:
		update_progress_bar((float(health)/float(max_health))*100)

func kill_self():
	get_parent().remove_child(self)

func enemy_left_out():
	inflictDamage(LOSS_AFTER_ENEMY_HIT)

	
func addPosition(_movement):
	# rpc_id(Config.other_player_id, \"move_player\", {position: position})
	rpc_unreliable(\"set_position\",position+_movement)
	
puppetsync func set_position(p_position):
	position = p_position
	$CanvasLayer.offset = p_position
	
puppetsync func set_advertising_puppet(is_advertising):
	set_advertising(is_advertising)
		
func set_advertising(is_advertising):
	advertising = is_advertising
	if advertising:
		$AnimationPlayer.get_animation(\"dock\").set_loop(true)
		$AnimationPlayer.play(\"dock\")
	else:
		$AnimationPlayer.get_animation(\"dock\").set_loop(false)
		
func take_control():
	# print(\"Trying to take control as \", player_nr, \" Other player is: \", Config.other_player_id)
	get_parent().docking()

func slave_position(p_position):
	position = Vector2(p_position.x +ship_slave_offset_x, p_position.y)
	$CanvasLayer.offset = Vector2(p_position.x +ship_slave_offset_x, p_position.y)
"

[sub_resource type="StyleBoxFlat" id=2]
bg_color = Color( 0.180392, 0.717647, 0.313726, 1 )

[sub_resource type="StyleBoxFlat" id=3]
bg_color = Color( 0.239216, 0.239216, 0.239216, 1 )

[sub_resource type="Animation" id=4]
resource_name = "damage"

[sub_resource type="Animation" id=5]
resource_name = "dock"
loop = true
tracks/0/type = "value"
tracks/0/path = NodePath(".:modulate")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.5, 1 ),
"transitions": PoolRealArray( 1, 1, 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 1 ), Color( 1, 2, 1, 1 ), Color( 1, 1, 1, 1 ) ]
}

[sub_resource type="GDScript" id=6]
script/source = "extends Area2D


func _ready():
	if get_parent().is_network_master():
		connect(\"body_entered\", self, \"_on_enemy_body_enter\")
	
func _on_enemy_body_enter(body):
	if(get_parent().advertising):
		if(body.get_parent().advertising):
			get_parent().take_control()
"

[sub_resource type="RectangleShape2D" id=7]

[sub_resource type="RectangleShape2D" id=8]

[node name="Player" type="Area2D" groups=[
"player",
]]
collision_layer = 5
collision_mask = 5
script = SubResource( 1 )

[node name="Ship_1" type="Sprite" parent="."]
scale = Vector2( 0.226887, 0.226887 )
texture = ExtResource( 1 )

[node name="Ship_1_Shape" type="CollisionPolygon2D" parent="."]
scale = Vector2( 0.226887, 0.226887 )
polygon = PoolVector2Array( -27, -317.7, 107, -253.7, 107, -247.2, 137, -143.6, 137, -119.2, 46.1, -21.7, 62.9, 1, 60.5, 5.60001, 59.4, 14.5, 54, 14.5, 45, 18, 45, 19.4, 137, 117.4, 137, 146.9, 100.7, 260.5, 96, 260.5, -28.3, 318.5, -78.7, 318.5, -92, 316.9, -92, 313.8, -120, 289.8, -120, 285.1, -126.7, 231.5, -121.6, 231.5, -94.7, 191.5, -91, 191.5, -72.1, 182.5, -53.6, 182.5, -30, 186.2, -30, 188.5, -8, 200.5, -8, 204.1, 1.39999, 219.7, 14.8, 193.7, -8.89999, 114, -39.5, 72.5, -41.5, 72.5, -137, 7.5, -137, -6.89999, -115, -16.8, -39, -73, -39, -75.3, -10, -110.4, -10, -116.3, 14, -192.4, 14, -194.3, 1.10001, -220.9, -15.2, -193.5, -20.3, -193.5, -61.3, -181.5, -64.8, -181.5, -98, -192.9, -98, -195.6, -122, -223.7, -122, -228.5, -127.9, -262.5, -124.8, -262.5, -114.8, -297.5, -111.9, -297.5, -91.9, -315.5, -87.6, -315.5, -73.8, -318.5, -27, -318.5 )

[node name="Ship_2_1" type="Sprite" parent="."]
scale = Vector2( 0.226887, 0.226887 )
texture = ExtResource( 3 )

[node name="Ship_2_1_Shape" type="CollisionPolygon2D" parent="."]
scale = Vector2( 0.226887, 0.226887 )
polygon = PoolVector2Array( 51, -306.4, 64, -292.3, 64, -289.2, 81, -266.2, 81, -263.1, 112.3, -212.6, 111.2, -210.5, 110.5, -210.5, 101.5, -179.5, 100.4, -179.5, 75.4, -111.5, 74.3, -111.5, 51, -56.2, 51, -52.3, 48.6, -42.5, 46.8, -42.5, 42.8, -38.5, 25, -38.5, -40, -36.6, -40, -36, -45.6, -25.5, -44.8, -25.5, -27, -21.1, -27, -19.5, -17, -12.5, -17, -6.79999, -13.6, 12.5, -16.3, 12.5, -25.2, 20.5, -28.7, 20.5, -42.4, 24.5, -37.7, 35.5, -19, 35.5, 47, 37.5, 47, 39.4, 52, 42.4, 52, 45.1, 115, 211.1, 115, 215.3, 108, 222.3, 108, 226.1, 83.1, 266.5, 82, 266.5, 53, 307.5, 49.9, 307.5, 39, 306.3, 39, 304.5, 35, 301.5, 35, 297.8, -5, 171.8, -5, 165.5, -19.5, 112.5, -20.5, 112.5, -110, 68.7, -110, 61.4, -107.8, 41.5, -106.1, 41.5, -102.1, 35.5, -94.2, 35.5, -64.6, 32.8, -67.4, 24.5, -71.2, 24.5, -98, 20.2, -98, 18.4, -105, 12.4, -105, 9.89999, -110, -1.10001, -110, -8.20001, -100, -21.5, -96.3, -21.5, -71, -25.2, -71, -28, -67.2, -35.5, -76, -35.5, -106, -36.5, -106, -38.7, -111, -43.7, -111, -49.5, -114.5, -64.5, -113, -64.5, -113, -70.5, -111, -70.5, -108, -74.5, -102.5, -74.5, -22, -113.8, -22, -117.8, 24.5, -280.5, 25.5, -280.5, 32.5, -303.5, 34.4, -303.5, 39, -306.6, 39, -308.5, 51, -308.5 )

[node name="Ship_2" type="Sprite" parent="."]
scale = Vector2( 0.226887, 0.226887 )
texture = ExtResource( 2 )

[node name="Ship_2_Shape" type="CollisionPolygon2D" parent="."]
scale = Vector2( 0.226887, 0.226887 )
polygon = PoolVector2Array( -81, -406.2, -81, -404.5, -11, -367.5, -11, -365.3, 22, -328.4, 22, -325.9, 69, -252, 69, -248.8, 197.9, -26.5, 198.9, -26.5, 213.9, -13.5, 215.2, -13.5, 237, -11.5, 237, 10.5, 235.4, 10.5, 215.3, 12.3, 199, 24.9, 199, 25.8, 52.9, 277.5, 51.6, 277.5, -10.4, 366.5, -13.7, 366.5, -83.7, 406.5, -88, 406.5, -124.8, 418.5, -168.2, 418.5, -237, 379.7, -237, 369.5, -235.2, 369.5, -147, 354.3, -68.9, 322.1, -50, 306.2, -50, 300.8, 12.2, 92.4, -23.8, 46.6, -102, 86.6, -102, 89.2, -120.5, 113.5, -145.5, 113.5, -158, 105.2, -158, 100.5, -161, -102.5, -157.5, -102.5, -149.5, -113.5, -117, -113.5, -117, -109.1, -103.3, -88.5, -21, -45.6, 11.8, -95.3, -53.7, -312.6, -83.6, -333.5, -85.9, -333.5, -128, -349.5, -131.5, -349.5, -237, -372.6, -237, -382.5, -235.4, -382.5, -171.4, -418.5, -121.2, -418.5 )

[node name="Ship_2_2" type="Sprite" parent="."]
scale = Vector2( 0.226887, 0.226887 )
texture = ExtResource( 4 )

[node name="Ship_2_2_Shape" type="CollisionPolygon2D" parent="."]
scale = Vector2( 0.226887, 0.226887 )
polygon = PoolVector2Array( -130, -417.5, -87.3, -385.5, -84.4, -385.5, -26, -345.6, -26, -344.5, 8, -318.5, 8, -316, 57, -236.1, 57, -233, 120, -125, 120, -123, 131.2, -100.5, 131.8, -100.5, 170, -66.4, 170, -62.5, 174, -33.6, 174, -23.3, 173.4, -19.5, 175.2, -19.5, 193, -16.2, 193, -14.5, 205, -5.5, 205, -3, 208.3, 2.5, 207.2, 4.5, 206.4, 4.5, 204.4, 10.5, 202.7, 10.5, 189.7, 21.5, 177.2, 21.5, 171, 22.3, 171, 26.5, 170, 73.5, 167.7, 73.5, 130, 104.4, 130, 105.2, 121, 116.2, 121, 119, 3.10001, 321.5, 1.7, 321.5, -42.3, 358.5, -45.3, 358.5, -125.6, 418.5, -170.5, 418.5, -193, 413.1, -193, 411.6, -199, 407.6, -199, 403.8, -210, 378.9, -210, 364.5, -207.6, 364.5, -196.6, 357.5, -186.1, 357.5, -171.9, 354, -167.4, 340.5, -165.8, 340.5, -157.8, 332.5, -151.6, 332.5, -145.6, 328.5, -139.3, 328.5, -110, 323.8, -110, 322.7, -45, 253.6, -45, 251.8, 21, 172.8, 21, 170.9, 45, 136, 45, 133.1, 69, 80.1, 48.8, 40.5, -5, 39.5, -5, 40.2, -17, 55.5, -19.3, 55.5, -26.3, 61.5, -31.7, 61.5, -38.6, 64.5, -46.3, 64.5, -68, 56.9, -68, 55.3, -81, 42.3, -81, 40.5, -85.5, 21.5, -83.3, 21.5, -79.3, 12.5, -71.9, 12.5, -57, 14.2, -57, -10.5, -64.7, -10.5, -80, -8.20001, -80, -10.9, -85, -18.9, -85, -21.7, -80.6, -39.5, -79, -39.5, -70, -51.5, -67.5, -51.5, -49.5, -60.5, -37, -60.5, -37, -59.2, -25, -57.2, -25, -55.6, -16, -50.7, -16, -49.4, -8, -42.4, -8, -39, -5.89999, -35.5, 3.10001, -35.5, 19, -34.6, 19, -35.3, 47, -38.3, 47, -38.9, 66.3, -80.4, 45.7, -130.5, 44.9, -130.5, 21.9, -167.5, 21.1, -167.5, -107.9, -312.5, -108.8, -312.5, -119.8, -322.5, -127.2, -322.5, -159, -328.9, -159, -330.5, -168, -337.5, -168, -340.1, -171.4, -349.5, -176.2, -349.5, -206, -356.9, -206, -358.5, -210, -361.5, -210, -366.8, -198.5, -404.5, -197, -404.5, -194, -408.5, -191.1, -408.5, -149.1, -418.5, -130, -418.5 )

[node name="CanvasLayer" type="CanvasLayer" parent="."]
follow_viewport_scale = 0.0

[node name="HealthBar" type="ProgressBar" parent="CanvasLayer"]
margin_left = -80.4735
margin_top = -94.4017
margin_right = 96.5265
margin_bottom = -80.4017
custom_styles/fg = SubResource( 2 )
custom_styles/bg = SubResource( 3 )
step = 1.0
value = 100.0
rounded = true
percent_visible = false
__meta__ = {
"_edit_use_anchors_": false
}

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
anims/damage = SubResource( 4 )
anims/dock = SubResource( 5 )

[node name="Ship_1_Dock" type="Area2D" parent="."]
collision_layer = 16
collision_mask = 16
script = SubResource( 6 )

[node name="CollisionShape2D" type="CollisionShape2D" parent="Ship_1_Dock"]
position = Vector2( 53.7722, 0 )
shape = SubResource( 7 )

[node name="Ship_2_Dock" type="KinematicBody2D" parent="."]
collision_layer = 16
collision_mask = 16

[node name="CollisionShape2D" type="CollisionShape2D" parent="Ship_2_Dock"]
position = Vector2( -65.3488, 0 )
shape = SubResource( 8 )
